{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\AccionSocial\\\\app\\\\frontend\\\\accion_social\\\\src\\\\paginas\\\\Persona.js\";\nimport React from \"react\";\nimport { Button, TextField, MenuItem, Grid, Tabs, Tab, AppBar, Card, CardContent, Modal } from '@material-ui/core';\nimport TabPanel from '../componentes/TabPanel';\nimport { Autocomplete } from \"@material-ui/lab\";\nimport conn from '../ServiceConexion';\n\nclass Persona extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: 0,\n      nombre: '',\n      apellido: '',\n      ndoc: '',\n      fecha_nacimiento: '',\n      telefono: '',\n      email: '',\n      calle: '',\n      altura: '',\n      id_barrio: '',\n      barrio: '',\n      profesion: '',\n      open: false,\n      options_pers: [],\n      options_barrios: [],\n      tab_selected: 0,\n      open: false\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleFormSubmit = () => {\n      conn.savepersona(this.state).then(response => {\n        if (response.data.error) {\n          this.setState({\n            error: response.data.error\n          });\n        } else {\n          this.setState({\n            id: 0,\n            nombre: '',\n            apellido: '',\n            ndoc: '',\n            fecha_nacimiento: '',\n            telefono: '',\n            email: '',\n            calle: '',\n            altura: '',\n            barrio: '',\n            profesion: ''\n          });\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this.handleTab = (e, newval) => {\n      this.setState({\n        tab_selected: newval\n      });\n    };\n\n    this.searchPersona = e => {\n      const nrodoc = e.target.value;\n\n      if (e.target.value.length >= 4) {\n        conn.searchpersona(e.target.value).then(response => {\n          if (response.data.error) {\n            this.setState({\n              ndoc: nrodoc\n            });\n          } else {\n            this.setState({\n              options_pers: response.data\n            });\n          }\n        }).catch(error => {\n          console.error(error);\n        });\n      }\n    };\n\n    this.autocompleteChangePersona = (e, newValue) => {\n      this.setState({ ...newValue\n      });\n    };\n\n    this.searchBarrio = e => {\n      if (e.target.value.length >= 4) {\n        conn.searchbarrio(e.target.value).then(response => {\n          if (response.data.error) {\n            this.setState({\n              error: response.data.error\n            });\n          } else {\n            this.setState({\n              options_barrios: response.data\n            });\n          }\n        }).catch(error => {\n          console.error(error);\n        });\n      }\n    };\n\n    this.autocompleteChangeBarrio = (e, newValue) => {\n      this.setState({\n        id_barrio: newValue.num,\n        barrio: newValue.barrio\n      });\n    };\n  }\n\n  render() {\n    const {\n      open,\n      options_pers,\n      options_barrios\n    } = this.state; //const loading = open && options.length === 0;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"alert-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, \"Use Google's location service?\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      id: \"alert-dialog-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: handleClose,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, \"Disagree\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: handleClose,\n      color: \"primary\",\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, \"Agree\"))), /*#__PURE__*/React.createElement(Card, {\n      className: \"Card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      position: \"static\",\n      color: \"transparent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Tabs, {\n      value: this.state.tab_selected,\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      onChange: this.handleTab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      label: \"Persona\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Tab, {\n      label: \"Familiares\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(TabPanel, {\n      value: this.state.tab_selected,\n      index: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      justify: \"flex-start\",\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 37\n      }\n    }, \"Agregar Persona\")), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      autoComplete: true,\n      freeSolo: true,\n      loadingText: \"Cargando...\",\n      noOptionsText: \"Sin datos\",\n      onChange: this.autocompleteChangePersona,\n      getOptionLabel: option => option.ndoc ? option.ndoc.toString() : '',\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        id: \"txNdoc\",\n        name: \"ndoc\",\n        label: \"Nro. Documento\",\n        fullWidth: true,\n        value: this.state.ndoc,\n        onChange: this.searchPersona,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 49\n        }\n      })),\n      options: options_pers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"labelleft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 45\n      }\n    }, \"Ingrese al menos 4 caracteres para iniciar la b\\xFAsqueda.\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"txtNombre\",\n      fullWidth: true,\n      name: \"nombre\",\n      label: \"Nombre\",\n      value: this.state.nombre,\n      onChange: e => this.setState({\n        nombre: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"txtApellido\",\n      fullWidth: true,\n      name: \"apellido\",\n      label: \"Apellido\",\n      value: this.state.apellido,\n      onChange: e => this.setState({\n        apellido: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"txtFechaNacimiento\",\n      fullWidth: true,\n      name: \"fecha_nacimiento\",\n      label: \"Fecha Nacimiento\",\n      type: \"date\",\n      InputLabelProps: {\n        shrink: true\n      },\n      value: this.state.fecha_nacimiento,\n      onChange: e => this.setState({\n        fecha_nacimiento: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"txtTelefono\",\n      fullWidth: true,\n      name: \"telefono\",\n      label: \"Tel\\xE9fono\",\n      value: this.state.telefono,\n      onChange: e => this.setState({\n        telefono: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"txtEmail\",\n      fullWidth: true,\n      name: \"email\",\n      label: \"Email\",\n      value: this.state.email,\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"txtCalle\",\n      fullWidth: true,\n      name: \"calle\",\n      label: \"Calle\",\n      value: this.state.calle,\n      onChange: e => this.setState({\n        calle: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"txtAltura\",\n      fullWidth: true,\n      name: \"altura\",\n      label: \"Altura\",\n      value: this.state.altura,\n      onChange: e => this.setState({\n        altura: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      autoComplete: true,\n      freeSolo: true,\n      loadingText: \"Cargando...\",\n      noOptionsText: \"Sin datos\",\n      onChange: this.autocompleteChangeBarrio,\n      getOptionLabel: option => option.barrio,\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        id: \"txtBarrio\",\n        name: \"barrio\",\n        label: \"Barrio\",\n        fullWidth: true,\n        value: this.state.barrio,\n        onChange: this.searchBarrio,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 49\n        }\n      })),\n      options: options_barrios,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"labelleft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 45\n      }\n    }, \"Ingrese al menos 4 caracteres para iniciar la b\\xFAsqueda.\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"ddlSituacionLaboral\",\n      select: true,\n      fullWidth: true,\n      name: \"profesion\",\n      label: \"Situaci\\xF3n Laboral\",\n      className: \"labelleft\",\n      value: this.state.profesion,\n      onChange: e => this.setState({\n        profesion: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"Activo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 45\n      }\n    }, \"Activo\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"Jubilado\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 45\n      }\n    }, \"Jubilado\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"Pensionado\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 45\n      }\n    }, \"Pensionado\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"Desocupado\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 45\n      }\n    }, \"Desocupado\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      justify: \"flex-start\",\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: e => {\n        this.handleFormSubmit(e);\n        this.showOpen();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 41\n      }\n    }, \"Guardar\"))))), /*#__PURE__*/React.createElement(TabPanel, {\n      value: this.state.tab_selected,\n      index: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }\n    }, \"ALGO\"))));\n  }\n\n}\n\nexport default Persona;","map":{"version":3,"sources":["D:/Work/AccionSocial/app/frontend/accion_social/src/paginas/Persona.js"],"names":["React","Button","TextField","MenuItem","Grid","Tabs","Tab","AppBar","Card","CardContent","Modal","TabPanel","Autocomplete","conn","Persona","Component","state","id","nombre","apellido","ndoc","fecha_nacimiento","telefono","email","calle","altura","id_barrio","barrio","profesion","open","options_pers","options_barrios","tab_selected","handleClickOpen","setState","handleClose","handleFormSubmit","savepersona","then","response","data","error","catch","console","handleTab","e","newval","searchPersona","nrodoc","target","value","length","searchpersona","autocompleteChangePersona","newValue","searchBarrio","searchbarrio","autocompleteChangeBarrio","num","render","option","toString","params","shrink","showOpen"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button, TextField, MenuItem, Grid, Tabs, Tab , AppBar, Card, CardContent, Modal } from '@material-ui/core';\r\nimport TabPanel from '../componentes/TabPanel';\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport conn from '../ServiceConexion';\r\n\r\nclass Persona extends React.Component {\r\n    \r\n    state = {\r\n        id: 0,\r\n        nombre: '',\r\n        apellido: '',\r\n        ndoc: '',\r\n        fecha_nacimiento: '',\r\n        telefono: '',\r\n        email: '',\r\n        calle: '',\r\n        altura: '',\r\n        id_barrio: '',\r\n        barrio: '',\r\n        profesion: '',\r\n\r\n        open: false,\r\n        options_pers: [],\r\n        options_barrios: [],\r\n\r\n        tab_selected: 0,\r\n        open: false\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        this.setState( { open: true} );\r\n    };\r\n    \r\n    handleClose = () => {\r\n        this.setState( { open: false} );\r\n    };\r\n\r\n    handleFormSubmit = () => {\r\n        conn.savepersona(this.state).then( response => {\r\n            if (response.data.error) {\r\n                this.setState({error : response.data.error});\r\n            }\r\n            else {\r\n                this.setState({id: 0, \r\n                                nombre: '',\r\n                                apellido: '',\r\n                                ndoc: '',\r\n                                fecha_nacimiento: '',\r\n                                telefono: '',\r\n                                email: '',\r\n                                calle: '',\r\n                                altura: '',\r\n                                barrio: '',\r\n                                profesion: ''});\r\n            }\r\n         })\r\n        .catch( error => { console.error(error) } );\r\n    };\r\n\r\n    handleTab = (e, newval) => {\r\n        this.setState ({tab_selected: newval});\r\n    };\r\n\r\n    searchPersona = (e) => {\r\n        const nrodoc = e.target.value;\r\n        if (e.target.value.length >= 4) {\r\n            conn.searchpersona(e.target.value).then( response => {\r\n                if (response.data.error) {\r\n                    this.setState({ ndoc: nrodoc });\r\n                }\r\n                else {\r\n                    this.setState({ options_pers : response.data});\r\n                }\r\n             })\r\n            .catch( error => { console.error(error) } );\r\n        }\r\n    } \r\n\r\n    autocompleteChangePersona = (e, newValue) => {\r\n        this.setState({...newValue})\r\n    }\r\n\r\n    searchBarrio = (e) => {\r\n        if (e.target.value.length >= 4) {\r\n            conn.searchbarrio(e.target.value).then( response => {\r\n                if (response.data.error) {\r\n                    this.setState({error : response.data.error});\r\n                }\r\n                else {\r\n                    this.setState({ options_barrios : response.data});\r\n                }\r\n             })\r\n            .catch( error => { console.error(error) } );\r\n        }\r\n    } \r\n\r\n    autocompleteChangeBarrio = (e, newValue) => {\r\n        this.setState({id_barrio: newValue.num, barrio: newValue.barrio})\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const { open, options_pers, options_barrios } = this.state;\r\n        //const loading = open && options.length === 0;\r\n      \r\n        return (\r\n            <div className=\"App\">\r\n                <Dialog\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n                    <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Let Google help apps determine location. This means sending anonymous location data to\r\n                        Google, even when no apps are running.\r\n                    </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Disagree\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        Agree\r\n                    </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Card className=\"Card\" >\r\n                    <CardContent>\r\n                        <AppBar position=\"static\" color=\"transparent\">\r\n                            <Tabs\r\n                                value={this.state.tab_selected}\r\n                                indicatorColor=\"primary\"\r\n                                textColor=\"primary\"\r\n                                onChange={this.handleTab}\r\n                            >\r\n                                <Tab label=\"Persona\" ></Tab>\r\n                                <Tab label=\"Familiares\" ></Tab>\r\n                            </Tabs>\r\n                        </AppBar>\r\n                        <TabPanel value={this.state.tab_selected} index={0} >\r\n                            <Grid container spacing={3} >\r\n                                <Grid item container justify=\"flex-start\" xs={12}>\r\n                                    <h2>Agregar Persona</h2>\r\n                                </Grid>\r\n                                <Grid container spacing={3} item xs={12}>\r\n                                    <Grid item xs={6}>\r\n                                        <Autocomplete\r\n                                            autoComplete={true}\r\n                                            freeSolo\r\n                                            loadingText='Cargando...'\r\n                                            noOptionsText =\"Sin datos\"\r\n                                            onChange={this.autocompleteChangePersona}\r\n                                            getOptionLabel={option => option.ndoc ? option.ndoc.toString() : '' }\r\n                                            renderInput={params => (\r\n                                                <TextField {...params} id=\"txNdoc\" name=\"ndoc\" label=\"Nro. Documento\" fullWidth value={this.state.ndoc}  onChange={this.searchPersona}  />)}\r\n                                            options={options_pers} />\r\n                                            <small className=\"labelleft\">Ingrese al menos 4 caracteres para iniciar la búsqueda.</small>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField id=\"txtNombre\" fullWidth name=\"nombre\" label=\"Nombre\" value={this.state.nombre} onChange={e => this.setState({ nombre: e.target.value })} ></TextField>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField id=\"txtApellido\" fullWidth name=\"apellido\" label=\"Apellido\" value={this.state.apellido} onChange={e => this.setState({ apellido: e.target.value })} ></TextField>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField id=\"txtFechaNacimiento\" fullWidth name=\"fecha_nacimiento\" label=\"Fecha Nacimiento\" type=\"date\" InputLabelProps={{ shrink: true, }} value={this.state.fecha_nacimiento} onChange={e => this.setState({ fecha_nacimiento: e.target.value })} ></TextField>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField id=\"txtTelefono\" fullWidth name=\"telefono\" label=\"Teléfono\" value={this.state.telefono} onChange={e => this.setState({ telefono: e.target.value })} ></TextField>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField id=\"txtEmail\" fullWidth name=\"email\" label=\"Email\" value={this.state.email} onChange={e => this.setState({ email: e.target.value })} ></TextField>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField id=\"txtCalle\" fullWidth name=\"calle\" label=\"Calle\" value={this.state.calle} onChange={e => this.setState({ calle: e.target.value })} ></TextField>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField id=\"txtAltura\" fullWidth name=\"altura\" label=\"Altura\" value={this.state.altura} onChange={e => this.setState({ altura: e.target.value })} ></TextField>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Autocomplete\r\n                                            autoComplete={true}\r\n                                            freeSolo\r\n                                            loadingText='Cargando...'\r\n                                            noOptionsText =\"Sin datos\"\r\n                                            onChange={this.autocompleteChangeBarrio}\r\n                                            getOptionLabel={option => option.barrio}\r\n                                            renderInput={params => (\r\n                                                <TextField {...params} id=\"txtBarrio\" name=\"barrio\" label=\"Barrio\" fullWidth value={this.state.barrio} onChange={this.searchBarrio}  />)}\r\n                                            options={options_barrios} />\r\n                                            <small className=\"labelleft\">Ingrese al menos 4 caracteres para iniciar la búsqueda.</small>        \r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField id=\"ddlSituacionLaboral\" select fullWidth name=\"profesion\" label=\"Situación Laboral\" className=\"labelleft\" value={this.state.profesion} onChange={e => this.setState({ profesion: e.target.value })} >\r\n                                            <MenuItem value=\"Activo\">Activo</MenuItem>\r\n                                            <MenuItem value=\"Jubilado\">Jubilado</MenuItem>\r\n                                            <MenuItem value=\"Pensionado\">Pensionado</MenuItem>\r\n                                            <MenuItem value=\"Desocupado\">Desocupado</MenuItem>\r\n                                        </TextField>\r\n                                    </Grid>\r\n                                    <Grid item container justify=\"flex-start\" xs={12}>\r\n                                        <Button variant=\"contained\" color=\"primary\" onClick={e => {this.handleFormSubmit(e);this.showOpen();}} >Guardar</Button>\r\n                                    </Grid>\r\n                                </Grid>                    \r\n                            </Grid>\r\n                        </TabPanel>\r\n                        <TabPanel value={this.state.tab_selected} index={1} >\r\n                            ALGO\r\n                        </TabPanel>\r\n                    </CardContent>                    \r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Persona;"]},"metadata":{},"sourceType":"module"}